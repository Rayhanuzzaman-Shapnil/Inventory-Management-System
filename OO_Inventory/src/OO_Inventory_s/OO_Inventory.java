/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package OO_Inventory_s;

import java.awt.Component;
import java.awt.event.KeyEvent;
import javax.swing.JCheckBox;
import javax.swing.JTextField;

/**
 *
 * @author A
 */
public class OO_Inventory extends javax.swing.JFrame {

    /**
     * Creates new form OO_Inventory
     */
    public OO_Inventory() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        chkCinnamon = new javax.swing.JCheckBox();
        txtCinnamon = new javax.swing.JTextField();
        txtClove = new javax.swing.JTextField();
        chkClove = new javax.swing.JCheckBox();
        chkMustard = new javax.swing.JCheckBox();
        txtMustard = new javax.swing.JTextField();
        chkBlackSalt = new javax.swing.JCheckBox();
        txtBlackSalt = new javax.swing.JTextField();
        txtRockSalt = new javax.swing.JTextField();
        chkRockSalt = new javax.swing.JCheckBox();
        chkPoppySeed = new javax.swing.JCheckBox();
        txtPoppySeed = new javax.swing.JTextField();
        chkBayLeaf = new javax.swing.JCheckBox();
        txtBayLeaf = new javax.swing.JTextField();
        chkGinger = new javax.swing.JCheckBox();
        txtGinger = new javax.swing.JTextField();
        chkNutmeg = new javax.swing.JCheckBox();
        txtNutmeg = new javax.swing.JTextField();
        chkGarlic = new javax.swing.JCheckBox();
        txtGarlic = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        btnTotal = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtTax = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSubtotal = new javax.swing.JTextField();
        btnExit = new javax.swing.JButton();
        btnRest = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        chkPaprika = new javax.swing.JCheckBox();
        txtPaprika = new javax.swing.JTextField();
        chkSaffron = new javax.swing.JCheckBox();
        txtSaffron = new javax.swing.JTextField();
        chkTurmeric = new javax.swing.JCheckBox();
        txtTurmeric = new javax.swing.JTextField();
        chkCoriander = new javax.swing.JCheckBox();
        txtCoriander = new javax.swing.JTextField();
        chkCumin = new javax.swing.JCheckBox();
        txtCumin = new javax.swing.JTextField();
        txtSeasame = new javax.swing.JTextField();
        chkSeasame = new javax.swing.JCheckBox();
        chkBlackCumin = new javax.swing.JCheckBox();
        txtBlackCumin = new javax.swing.JTextField();
        chkPepper = new javax.swing.JCheckBox();
        txtPepper = new javax.swing.JTextField();
        chkFenugreek = new javax.swing.JCheckBox();
        txtFenugreek = new javax.swing.JTextField();
        chkCardamom = new javax.swing.JCheckBox();
        txtCardamom = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1255, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 8));

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 40)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Object Oriented Inventory System");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 51), 8));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 1110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(24, 24, 24))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 1180, -1));

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        chkCinnamon.setBackground(new java.awt.Color(204, 255, 204));
        chkCinnamon.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkCinnamon.setText("Cinnamon");
        chkCinnamon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCinnamonActionPerformed(evt);
            }
        });
        jPanel2.add(chkCinnamon, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, 20));

        txtCinnamon.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtCinnamon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCinnamonKeyTyped(evt);
            }
        });
        jPanel2.add(txtCinnamon, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 50, 20));

        txtClove.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtClove.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCloveKeyTyped(evt);
            }
        });
        jPanel2.add(txtClove, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 50, 20));

        chkClove.setBackground(new java.awt.Color(204, 255, 204));
        chkClove.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkClove.setText("Clove");
        chkClove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCloveActionPerformed(evt);
            }
        });
        jPanel2.add(chkClove, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 20));

        chkMustard.setBackground(new java.awt.Color(204, 255, 204));
        chkMustard.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkMustard.setText("Mustard");
        chkMustard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMustardActionPerformed(evt);
            }
        });
        jPanel2.add(chkMustard, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, 20));

        txtMustard.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtMustard.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMustardKeyTyped(evt);
            }
        });
        jPanel2.add(txtMustard, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 50, 20));

        chkBlackSalt.setBackground(new java.awt.Color(204, 255, 204));
        chkBlackSalt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkBlackSalt.setText("Black salt");
        chkBlackSalt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBlackSaltActionPerformed(evt);
            }
        });
        jPanel2.add(chkBlackSalt, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, -1, 20));

        txtBlackSalt.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtBlackSalt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBlackSaltKeyTyped(evt);
            }
        });
        jPanel2.add(txtBlackSalt, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 50, 50, 20));

        txtRockSalt.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtRockSalt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRockSaltKeyTyped(evt);
            }
        });
        jPanel2.add(txtRockSalt, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, 50, 20));

        chkRockSalt.setBackground(new java.awt.Color(204, 255, 204));
        chkRockSalt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkRockSalt.setText("Rock Salt");
        chkRockSalt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRockSaltActionPerformed(evt);
            }
        });
        jPanel2.add(chkRockSalt, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, -1, 20));

        chkPoppySeed.setBackground(new java.awt.Color(204, 255, 204));
        chkPoppySeed.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkPoppySeed.setText("Poppy Seed");
        chkPoppySeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPoppySeedActionPerformed(evt);
            }
        });
        jPanel2.add(chkPoppySeed, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, -1, 20));

        txtPoppySeed.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtPoppySeed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPoppySeedKeyTyped(evt);
            }
        });
        jPanel2.add(txtPoppySeed, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 50, 20));

        chkBayLeaf.setBackground(new java.awt.Color(204, 255, 204));
        chkBayLeaf.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkBayLeaf.setText("Bay Leaf");
        chkBayLeaf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBayLeafActionPerformed(evt);
            }
        });
        jPanel2.add(chkBayLeaf, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, 20));

        txtBayLeaf.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtBayLeaf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBayLeafKeyTyped(evt);
            }
        });
        jPanel2.add(txtBayLeaf, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 50, 20));

        chkGinger.setBackground(new java.awt.Color(204, 255, 204));
        chkGinger.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkGinger.setText("Ginger");
        chkGinger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkGingerActionPerformed(evt);
            }
        });
        jPanel2.add(chkGinger, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, -1, 20));

        txtGinger.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtGinger.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGingerKeyTyped(evt);
            }
        });
        jPanel2.add(txtGinger, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 50, 20));

        chkNutmeg.setBackground(new java.awt.Color(204, 255, 204));
        chkNutmeg.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkNutmeg.setText("Nutmeg");
        chkNutmeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkNutmegActionPerformed(evt);
            }
        });
        jPanel2.add(chkNutmeg, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, 20));

        txtNutmeg.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtNutmeg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNutmegKeyTyped(evt);
            }
        });
        jPanel2.add(txtNutmeg, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 50, 20));

        chkGarlic.setBackground(new java.awt.Color(204, 255, 204));
        chkGarlic.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkGarlic.setText("Garlic");
        chkGarlic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkGarlicActionPerformed(evt);
            }
        });
        jPanel2.add(chkGarlic, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 140, -1, 20));

        txtGarlic.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtGarlic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGarlicKeyTyped(evt);
            }
        });
        jPanel2.add(txtGarlic, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, 50, 20));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 170, 550, 180));

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Total");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, 70, 20));

        txtTotal.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtTotal.setMinimumSize(new java.awt.Dimension(7, 19));
        jPanel3.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 90, 100, 20));

        btnTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnTotal.setText("Total");
        btnTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTotalActionPerformed(evt);
            }
        });
        jPanel3.add(btnTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 60, 70, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Tax");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, 70, 20));

        txtTax.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtTax.setMinimumSize(new java.awt.Dimension(7, 19));
        jPanel3.add(txtTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 30, 100, 20));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Subtotal");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 70, 20));

        txtSubtotal.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtSubtotal.setMinimumSize(new java.awt.Dimension(7, 19));
        jPanel3.add(txtSubtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, 100, 20));

        btnExit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jPanel3.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 90, 70, -1));

        btnRest.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRest.setText("Reset");
        btnRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestActionPerformed(evt);
            }
        });
        jPanel3.add(btnRest, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 30, -1, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, 1140, 140));

        jPanel4.setBackground(new java.awt.Color(204, 255, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        chkPaprika.setBackground(new java.awt.Color(204, 255, 204));
        chkPaprika.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkPaprika.setText("Paprika");
        chkPaprika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPaprikaActionPerformed(evt);
            }
        });
        jPanel4.add(chkPaprika, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 90, 20));

        txtPaprika.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtPaprika.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPaprikaKeyTyped(evt);
            }
        });
        jPanel4.add(txtPaprika, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 50, 20));

        chkSaffron.setBackground(new java.awt.Color(204, 255, 204));
        chkSaffron.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkSaffron.setText("Saffron");
        chkSaffron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSaffronActionPerformed(evt);
            }
        });
        jPanel4.add(chkSaffron, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 90, 20));

        txtSaffron.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtSaffron.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSaffronKeyTyped(evt);
            }
        });
        jPanel4.add(txtSaffron, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 50, 20));

        chkTurmeric.setBackground(new java.awt.Color(204, 255, 204));
        chkTurmeric.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkTurmeric.setText("Turmeric");
        chkTurmeric.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTurmericActionPerformed(evt);
            }
        });
        jPanel4.add(chkTurmeric, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 90, 20));

        txtTurmeric.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtTurmeric.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTurmericActionPerformed(evt);
            }
        });
        txtTurmeric.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTurmericKeyTyped(evt);
            }
        });
        jPanel4.add(txtTurmeric, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 50, 20));

        chkCoriander.setBackground(new java.awt.Color(204, 255, 204));
        chkCoriander.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkCoriander.setText("Coriander");
        chkCoriander.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCorianderActionPerformed(evt);
            }
        });
        jPanel4.add(chkCoriander, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, 20));

        txtCoriander.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtCoriander.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorianderKeyTyped(evt);
            }
        });
        jPanel4.add(txtCoriander, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 50, 20));

        chkCumin.setBackground(new java.awt.Color(204, 255, 204));
        chkCumin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkCumin.setText("Cumin");
        chkCumin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCuminActionPerformed(evt);
            }
        });
        jPanel4.add(chkCumin, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, -1, 20));

        txtCumin.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtCumin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCuminKeyTyped(evt);
            }
        });
        jPanel4.add(txtCumin, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 50, 50, 20));

        txtSeasame.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtSeasame.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSeasameKeyTyped(evt);
            }
        });
        jPanel4.add(txtSeasame, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, 50, 20));

        chkSeasame.setBackground(new java.awt.Color(204, 255, 204));
        chkSeasame.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkSeasame.setText("Seasame");
        chkSeasame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSeasameActionPerformed(evt);
            }
        });
        jPanel4.add(chkSeasame, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, -1, 20));

        chkBlackCumin.setBackground(new java.awt.Color(204, 255, 204));
        chkBlackCumin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkBlackCumin.setText("Black Cumin");
        chkBlackCumin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBlackCuminActionPerformed(evt);
            }
        });
        jPanel4.add(chkBlackCumin, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, -1, 20));

        txtBlackCumin.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtBlackCumin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBlackCuminKeyTyped(evt);
            }
        });
        jPanel4.add(txtBlackCumin, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 80, 50, 20));

        chkPepper.setBackground(new java.awt.Color(204, 255, 204));
        chkPepper.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkPepper.setText("Pepper");
        chkPepper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPepperActionPerformed(evt);
            }
        });
        jPanel4.add(chkPepper, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, -1, 20));

        txtPepper.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtPepper.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPepperKeyTyped(evt);
            }
        });
        jPanel4.add(txtPepper, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, 50, 20));

        chkFenugreek.setBackground(new java.awt.Color(204, 255, 204));
        chkFenugreek.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkFenugreek.setText("Fenugreek");
        chkFenugreek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFenugreekActionPerformed(evt);
            }
        });
        jPanel4.add(chkFenugreek, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, 20));

        txtFenugreek.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtFenugreek.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFenugreekKeyTyped(evt);
            }
        });
        jPanel4.add(txtFenugreek, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 50, 20));

        chkCardamom.setBackground(new java.awt.Color(204, 255, 204));
        chkCardamom.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkCardamom.setText("Cardamom");
        chkCardamom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCardamomActionPerformed(evt);
            }
        });
        jPanel4.add(chkCardamom, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, -1, 20));

        txtCardamom.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtCardamom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCardamomKeyTyped(evt);
            }
        });
        jPanel4.add(txtCardamom, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 140, 50, 20));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, 570, 180));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        iQuit cExit = new iQuit();
        cExit.quit();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestActionPerformed
        JTextField cleartext=null;
        for(Component c:jPanel4.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("0");
                cleartext.setEnabled(false);
            }
        }
        
        for(Component c:jPanel2.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("0");
                cleartext.setEnabled(false);
            }
        }
        
        //===================================================================
         
         JCheckBox cls=null;
        for(Component c:jPanel4.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JCheckBox")){
                cls = (JCheckBox)c;
                cls.setSelected(false);
                
            }
        }
        
        for(Component c:jPanel2.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JCheckBox")){
                cls = (JCheckBox)c;
                cls.setSelected(false);
            }
        }
                
       //===========================================================         
        
    }//GEN-LAST:event_btnRestActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        JTextField cleartext=null;
        for(Component c:jPanel4.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("0");
                cleartext.setEnabled(false);
            }
        }
        
        for(Component c:jPanel2.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("0");
                cleartext.setEnabled(false);
            }
        }
        
        //===================================================================
         
         JCheckBox cls=null;
        for(Component c:jPanel4.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JCheckBox")){
                cls = (JCheckBox)c;
                cls.setSelected(false);
                
            }
        }
        
        for(Component c:jPanel2.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JCheckBox")){
                cls = (JCheckBox)c;
                cls.setSelected(false);
            }
        }
                
       //=========================================================== 
    }//GEN-LAST:event_formWindowActivated

    private void chkSaffronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSaffronActionPerformed
        if (chkSaffron.isSelected()){
            txtSaffron.setEnabled(true);
            txtSaffron.setText("");
            txtSaffron.requestFocus();                    
        }
        else{
            txtSaffron.setEnabled(false);
            txtSaffron.setText("0"); 
        }
    }//GEN-LAST:event_chkSaffronActionPerformed

    private void txtTurmericActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTurmericActionPerformed
        
    }//GEN-LAST:event_txtTurmericActionPerformed

    private void txtSaffronKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaffronKeyTyped
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtSaffronKeyTyped

    private void chkPaprikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPaprikaActionPerformed
        if (chkPaprika.isSelected()){
            txtPaprika.setEnabled(true);
            txtPaprika.setText("");
            txtPaprika.requestFocus();                    
        }
        else{
            txtPaprika.setEnabled(false);
            txtPaprika.setText("0"); 
        }
    }//GEN-LAST:event_chkPaprikaActionPerformed

    private void chkTurmericActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTurmericActionPerformed
        if (chkTurmeric.isSelected()){
            txtTurmeric.setEnabled(true);
            txtTurmeric.setText("");
            txtTurmeric.requestFocus();                    
        }
        else{
           txtTurmeric.setEnabled(false);
           txtTurmeric.setText("0"); 
        }
    }//GEN-LAST:event_chkTurmericActionPerformed

    private void chkCorianderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCorianderActionPerformed
        if (chkCoriander.isSelected()){
            txtCoriander.setEnabled(true);
            txtCoriander.setText("");
            txtCoriander.requestFocus();                    
        }
        else{
            txtCoriander.setEnabled(false);
            txtCoriander.setText("0"); 
        }
    }//GEN-LAST:event_chkCorianderActionPerformed

    private void chkFenugreekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFenugreekActionPerformed
        if (chkFenugreek.isSelected()){
            txtFenugreek.setEnabled(true);
            txtFenugreek.setText("");
            txtFenugreek.requestFocus();                    
        }
        else{
            txtFenugreek.setEnabled(false);
            txtFenugreek.setText("0"); 
        }
    }//GEN-LAST:event_chkFenugreekActionPerformed

    private void chkSeasameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSeasameActionPerformed
        if (chkSeasame.isSelected()){
            txtSeasame.setEnabled(true);
            txtSeasame.setText("");
            txtSeasame.requestFocus();                    
        }
        else{
            txtSeasame.setEnabled(false);
            txtSeasame.setText("0"); 
        }
    }//GEN-LAST:event_chkSeasameActionPerformed

    private void chkCuminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCuminActionPerformed
        if (chkCumin.isSelected()){
            txtCumin.setEnabled(true);
            txtCumin.setText("");
            txtCumin.requestFocus();                    
        }
        else{
            txtCumin.setEnabled(false);
            txtCumin.setText("0"); 
        }
    }//GEN-LAST:event_chkCuminActionPerformed

    private void chkBlackCuminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBlackCuminActionPerformed
        if (chkBlackCumin.isSelected()){
            txtBlackCumin.setEnabled(true);
            txtBlackCumin.setText("");
            txtBlackCumin.requestFocus();                    
        }
        else{
            txtBlackCumin.setEnabled(false);
            txtBlackCumin.setText("0"); 
        }
    }//GEN-LAST:event_chkBlackCuminActionPerformed

    private void chkPepperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPepperActionPerformed
        if (chkPepper.isSelected()){
            txtPepper.setEnabled(true);
            txtPepper.setText("");
            txtPepper.requestFocus();                    
        }
        else{
            txtPepper.setEnabled(false);
            txtPepper.setText("0"); 
        }
    }//GEN-LAST:event_chkPepperActionPerformed

    private void chkCardamomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCardamomActionPerformed
        if (chkCardamom.isSelected()){
            txtCardamom.setEnabled(true);
            txtCardamom.setText("");
            txtCardamom.requestFocus();                    
        }
        else{
            txtCardamom.setEnabled(false);
            txtCardamom.setText("0"); 
        }
    }//GEN-LAST:event_chkCardamomActionPerformed

    private void chkCloveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCloveActionPerformed
        if (chkClove.isSelected()){
            txtClove.setEnabled(true);
            txtClove.setText("");
            txtClove.requestFocus();                    
        }
        else{
            txtClove.setEnabled(false);
            txtClove.setText("0"); 
        }
    }//GEN-LAST:event_chkCloveActionPerformed

    private void chkCinnamonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCinnamonActionPerformed
        if (chkCinnamon.isSelected()){
            txtCinnamon.setEnabled(true);
            txtCinnamon.setText("");
            txtCinnamon.requestFocus();                    
        }
        else{
            txtCinnamon.setEnabled(false);
            txtCinnamon.setText("0"); 
        }
    }//GEN-LAST:event_chkCinnamonActionPerformed

    private void chkMustardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMustardActionPerformed
        if (chkMustard.isSelected()){
            txtMustard.setEnabled(true);
            txtMustard.setText("");
            txtMustard.requestFocus();                    
        }
        else{
            txtMustard.setEnabled(false);
            txtMustard.setText("0"); 
        }
    }//GEN-LAST:event_chkMustardActionPerformed

    private void chkBayLeafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBayLeafActionPerformed
        if (chkBayLeaf.isSelected()){
            txtBayLeaf.setEnabled(true);
            txtBayLeaf.setText("");
            txtBayLeaf.requestFocus();                    
        }
        else{
            txtBayLeaf.setEnabled(false);
            txtBayLeaf.setText("0"); 
        }
    }//GEN-LAST:event_chkBayLeafActionPerformed

    private void chkNutmegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkNutmegActionPerformed
        if (chkNutmeg.isSelected()){
            txtNutmeg.setEnabled(true);
            txtNutmeg.setText("");
            txtNutmeg.requestFocus();                    
        }
        else{
            txtNutmeg.setEnabled(false);
            txtNutmeg.setText("0"); 
        }
    }//GEN-LAST:event_chkNutmegActionPerformed

    private void chkRockSaltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRockSaltActionPerformed
        if (chkRockSalt.isSelected()){
            txtRockSalt.setEnabled(true);
            txtRockSalt.setText("");
            txtRockSalt.requestFocus();                    
        }
        else{
            txtRockSalt.setEnabled(false);
            txtRockSalt.setText("0"); 
        }
    }//GEN-LAST:event_chkRockSaltActionPerformed

    private void chkBlackSaltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBlackSaltActionPerformed
        if (chkBlackSalt.isSelected()){
            txtBlackSalt.setEnabled(true);
            txtBlackSalt.setText("");
            txtBlackSalt.requestFocus();                    
        }
        else{
            txtBlackSalt.setEnabled(false);
            txtBlackSalt.setText("0"); 
        }
    }//GEN-LAST:event_chkBlackSaltActionPerformed

    private void chkPoppySeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPoppySeedActionPerformed
        if (chkPoppySeed.isSelected()){
            txtPoppySeed.setEnabled(true);
            txtPoppySeed.setText("");
            txtPoppySeed.requestFocus();                    
        }
        else{
            txtPoppySeed.setEnabled(false);
            txtPoppySeed.setText("0"); 
        }
    }//GEN-LAST:event_chkPoppySeedActionPerformed

    private void chkGingerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkGingerActionPerformed
        if (chkGinger.isSelected()){
            txtGinger.setEnabled(true);
            txtGinger.setText("");
            txtGinger.requestFocus();                    
        }
        else{
            txtGinger.setEnabled(false);
            txtGinger.setText("0"); 
        }
    }//GEN-LAST:event_chkGingerActionPerformed

    private void chkGarlicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkGarlicActionPerformed
        if (chkGarlic.isSelected()){
            txtGarlic.setEnabled(true);
            txtGarlic.setText("");
            txtGarlic.requestFocus();                    
        }
        else{
            txtGarlic.setEnabled(false);
            txtGarlic.setText("0"); 
        }
    }//GEN-LAST:event_chkGarlicActionPerformed

    private void txtPaprikaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaprikaKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtPaprikaKeyTyped

    private void txtTurmericKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTurmericKeyTyped
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtTurmericKeyTyped

    private void txtCorianderKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorianderKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtCorianderKeyTyped

    private void txtFenugreekKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFenugreekKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtFenugreekKeyTyped

    private void txtSeasameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSeasameKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtSeasameKeyTyped

    private void txtCuminKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCuminKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtCuminKeyTyped

    private void txtBlackCuminKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBlackCuminKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtBlackCuminKeyTyped

    private void txtPepperKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPepperKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtPepperKeyTyped

    private void txtCardamomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCardamomKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCardamomKeyTyped

    private void txtCloveKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCloveKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtCloveKeyTyped

    private void txtCinnamonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCinnamonKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtCinnamonKeyTyped

    private void txtMustardKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMustardKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtMustardKeyTyped

    private void txtBayLeafKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBayLeafKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtBayLeafKeyTyped

    private void txtNutmegKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNutmegKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtNutmegKeyTyped

    private void txtRockSaltKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRockSaltKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtRockSaltKeyTyped

    private void txtBlackSaltKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBlackSaltKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtBlackSaltKeyTyped

    private void txtPoppySeedKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPoppySeedKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtPoppySeedKeyTyped

    private void txtGingerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGingerKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtGingerKeyTyped

    private void txtGarlicKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGarlicKeyTyped
        // TODO add your handling code here:
        icTax clearT = new icTax();
        clearT.ClearText(evt);
    }//GEN-LAST:event_txtGarlicKeyTyped

    private void btnTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTotalActionPerformed
        // TODO add your handling code here:
        cInventory_Price cost_of_item = new cInventory_Price();
        icTax itemTax = new icTax();
        double iTax,iSubtotal,iTotal;
        
        cost_of_item.Saffron = cost_of_item.pSaffron*Double.parseDouble(txtSaffron.getText());
        cost_of_item.Paprika = cost_of_item.pPaprika*Double.parseDouble(txtPaprika.getText());
        cost_of_item.Turmeric = cost_of_item.pTurmeric*Double.parseDouble(txtTurmeric.getText());
        cost_of_item.Coriander = cost_of_item.pCoriander*Double.parseDouble(txtCoriander.getText());
        cost_of_item.Fenugreek = cost_of_item.pFenugreek*Double.parseDouble(txtFenugreek.getText());
        cost_of_item.Seasame = cost_of_item.pSeasame*Double.parseDouble(txtSeasame.getText());
        cost_of_item.Cumin = cost_of_item.pCumin*Double.parseDouble(txtCumin.getText());
        cost_of_item.BlackCumin = cost_of_item.pBlackCumin*Double.parseDouble(txtBlackCumin.getText());
        cost_of_item.Pepper = cost_of_item.pPepper*Double.parseDouble(txtPepper.getText());
        cost_of_item.Cardamom = cost_of_item.pCardamom*Double.parseDouble(txtCardamom.getText());
        cost_of_item.Clove = cost_of_item.pClove*Double.parseDouble(txtClove.getText());
        cost_of_item.Cinnamon = cost_of_item.pCinnamon*Double.parseDouble(txtCinnamon.getText());
        cost_of_item.Mustard = cost_of_item.pMustard*Double.parseDouble(txtMustard.getText());
        cost_of_item.BayLeaf = cost_of_item.pBayLeaf*Double.parseDouble(txtBayLeaf.getText());
        cost_of_item.Nutmeg = cost_of_item.pNutmeg*Double.parseDouble(txtNutmeg.getText());
        cost_of_item.RockSalt = cost_of_item.pRockSalt*Double.parseDouble(txtRockSalt.getText());
        cost_of_item.BlackSalt = cost_of_item.pBlackSalt*Double.parseDouble(txtBlackSalt.getText());
        cost_of_item.PoppySeed = cost_of_item.pPoppySeed*Double.parseDouble(txtPoppySeed.getText());
        cost_of_item.Ginger = cost_of_item.pGinger*Double.parseDouble(txtGinger.getText());
        cost_of_item.Garlic = cost_of_item.pGarlic*Double.parseDouble(txtGarlic.getText());
        
        iSubtotal = cost_of_item.GetAmount();
        iTax = itemTax.cFindTax(iSubtotal);
        iTotal = iSubtotal+iTax;
        
        String Tax = String.format("$%.2f",iTax);
        txtTax.setText(Tax);
        
        String SubTotal = String.format("$%.2f",iSubtotal);
        txtSubtotal.setText(SubTotal);
        
        String Total = String.format("$%.2f",iTotal);
        txtTotal.setText(Total);
        
        
    }//GEN-LAST:event_btnTotalActionPerformed

    
    
   
     /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OO_Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OO_Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OO_Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OO_Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OO_Inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnRest;
    private javax.swing.JButton btnTotal;
    private javax.swing.JCheckBox chkBayLeaf;
    private javax.swing.JCheckBox chkBlackCumin;
    private javax.swing.JCheckBox chkBlackSalt;
    private javax.swing.JCheckBox chkCardamom;
    private javax.swing.JCheckBox chkCinnamon;
    private javax.swing.JCheckBox chkClove;
    private javax.swing.JCheckBox chkCoriander;
    private javax.swing.JCheckBox chkCumin;
    private javax.swing.JCheckBox chkFenugreek;
    private javax.swing.JCheckBox chkGarlic;
    private javax.swing.JCheckBox chkGinger;
    private javax.swing.JCheckBox chkMustard;
    private javax.swing.JCheckBox chkNutmeg;
    private javax.swing.JCheckBox chkPaprika;
    private javax.swing.JCheckBox chkPepper;
    private javax.swing.JCheckBox chkPoppySeed;
    private javax.swing.JCheckBox chkRockSalt;
    private javax.swing.JCheckBox chkSaffron;
    private javax.swing.JCheckBox chkSeasame;
    private javax.swing.JCheckBox chkTurmeric;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField txtBayLeaf;
    private javax.swing.JTextField txtBlackCumin;
    private javax.swing.JTextField txtBlackSalt;
    private javax.swing.JTextField txtCardamom;
    private javax.swing.JTextField txtCinnamon;
    private javax.swing.JTextField txtClove;
    private javax.swing.JTextField txtCoriander;
    private javax.swing.JTextField txtCumin;
    private javax.swing.JTextField txtFenugreek;
    private javax.swing.JTextField txtGarlic;
    private javax.swing.JTextField txtGinger;
    private javax.swing.JTextField txtMustard;
    private javax.swing.JTextField txtNutmeg;
    private javax.swing.JTextField txtPaprika;
    private javax.swing.JTextField txtPepper;
    private javax.swing.JTextField txtPoppySeed;
    private javax.swing.JTextField txtRockSalt;
    private javax.swing.JTextField txtSaffron;
    private javax.swing.JTextField txtSeasame;
    private javax.swing.JTextField txtSubtotal;
    private javax.swing.JTextField txtTax;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtTurmeric;
    // End of variables declaration//GEN-END:variables
}